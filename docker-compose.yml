services:
  mosquitto:
    image: eclipse-mosquitto:2.0.21
    container_name: mosquitto
    ports:
      - ${MOSQUITTO_PORT}:${MOSQUITTO_PORT}
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    healthcheck:
      test: ["CMD", "mosquitto_sub", "-h", "localhost", "-t", "$$SYS/broker/version", "-C", "1", "-W", "2"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  mqtt-publisher:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mqtt-publisher
    command: uv run python -u main.py
    volumes:
      - ./data:/app/data
    depends_on:
      mosquitto:
        condition: service_healthy
    restart: unless-stopped

  telegraf:
    image: telegraf:1.34.2
    container_name: telegraf
    env_file: 
      - .env
    # environment:
    #   - INFLUXDB_URL=${INFLUXDB_URL}
    #   - INFLUXDB_ORG=${INFLUXDB_ORG}
    #   - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
    #   - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}

    volumes:
      - ${TELEGRAF_CFG_PATH}:/etc/telegraf/telegraf.conf:rw
    depends_on:
      mosquitto:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    restart: unless-stopped


  influxdb:
    image: influxdb:2.7.11
    container_name: influxdb
    ports:
      - ${INFLUXDB_PORT}:${INFLUXDB_PORT}
    volumes:
      - influxdb-data:/var/lib/influxdb2:rw
      - ./entrypoint.sh:/docker-entrypoint-initdb.d/entrypoint.sh:ro
    # entrypoint: ["./entrypoint.sh"]
    env_file: 
      - .env
    # environment:
    #   - DOCKER_INFLUXDB_INIT_MODE=${INFLUXDB_MODE}
    #   - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
    #   - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
    #   - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
    #   - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
    #   - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${INFLUXDB_PORT}/ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  grafana:
    image: grafana/grafana:11.3.0
    container_name: grafana
    ports:
      - ${GRAFANA_PORT}:3000
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD}
    depends_on:
      influxdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${GRAFANA_PORT}/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

volumes:
  influxdb-data:
  grafana-data: